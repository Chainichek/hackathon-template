version: '3'
services:
  auth-service:
    image: munirsunchalyaev/auth
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth_db/test_db
    depends_on:
      - auth_db

  employee-service:
    build:
      context: ./
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_URL: jdbc:postgresql://employee-db/test_db
      CLIENT_AUTH_URL: http://auth-service:8080
      SPRING_KAFKA_PRODUCER_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka-topics
      - auth-service
      - employee-db

  employee-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: test_db

  auth_db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: test_db

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper


  kafka-topics:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c", "echo 'Waiting for Kafka to be ready...' && sleep 10 && kafka-topics.sh --create --topic activity-notification --bootstrap-server kafka:9093 --partitions 1 --replication-factor 1  && kafka-topics.sh --create --topic create-employee --bootstrap-server kafka:9093 --partitions 1 --replication-factor 1" ]
