version: '3'
services:
  activity-service:
    build:
      context: ./activity
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/hackathon-template"
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EMPLOYEE_SERVICE_HOST: localhost:8082
    depends_on:
      - postgres
      - kafka
    networks:
      - kafka-network
      - postgres-network

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: hackathon-template
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - postgres-network
    volumes:
      - postgres_data:/var/lib/postgresql/data


  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-network

  kafka-topics:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c", "echo 'Waiting for Kafka to be ready...' && sleep 10 && kafka-topics.sh --create --topic activity-notification --bootstrap-server kafka:9093 --partitions 1 --replication-factor 1  && kafka-topics.sh --create --topic create-employee --bootstrap-server kafka:9093 --partitions 1 --replication-factor 1" ]
    networks:
      - kafka-network
networks:
  kafka-network:
    driver: bridge
  postgres-network:
    driver: bridge
volumes:
  postgres_data: